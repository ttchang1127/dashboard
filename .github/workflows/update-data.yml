# .github/workflows/update-data.yml

name: Update Google Sheet Data

# 觸發條件：
on:
  # 1. 每天的每個小時的第 5 分鐘自動執行一次 (您可以到 crontab.guru 網站查詢或產生您要的排程)
  schedule:
    - cron: '5 * * * *'
  # 2. 允許您在 Actions 分頁手動觸發此工作流程
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      # 步驟 1: 將您的儲存庫程式碼 checkout 到虛擬環境中
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步驟 2: 設定 Node.js 環境，這樣我們才能執行 JavaScript
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 步驟 3: 執行 Node.js 腳本來抓取資料並存檔
      - name: Fetch data from Google Sheets and save to JSON
        # 我們直接在 run 指令中寫腳本，省去多一個檔案的麻煩
        run: |
          node -e "
            const https = require('https');
            const fs = require('fs');

            const SPREADSHEET_ID = '1GjhgGAUuI5g6rtOGiUceMLgeGy12sp93fNQlWKM-UGc';
            const SHEET_NAME = encodeURIComponent('114執行金額');
            const SHEET_RANGE = 'B1:F2';
            const API_KEY = process.env.GOOGLE_API_KEY;

            if (!API_KEY) {
              console.error('Error: GOOGLE_API_KEY secret not found!');
              process.exit(1);
            }
            
            const url = \`https://sheets.googleapis.com/v4/spreadsheets/\${SPREADSHEET_ID}/values/\${SHEET_NAME}!\${SHEET_RANGE}?key=\${API_KEY}\`;

            https.get(url, (res) => {
              let rawData = '';
              res.on('data', (chunk) => { rawData += chunk; });
              res.on('end', () => {
                try {
                  const parsedData = JSON.parse(rawData);
                  if (parsedData.values) {
                    // 將抓到的資料寫入 performanceData.json 這個檔案
                    fs.writeFileSync('performanceData.json', JSON.stringify(parsedData.values, null, 2));
                    console.log('Successfully fetched data and wrote to performanceData.json');
                  } else {
                     console.error('Error parsing data from Google Sheets:', parsedData.error);
                     process.exit(1);
                  }
                } catch (e) {
                  console.error('Error parsing JSON:', e.message);
                  process.exit(1);
                }
              });
            }).on('error', (e) => {
              console.error(\`Got error: \${e.message}\`);
              process.exit(1);
            });
          "
        env:
          # 將我們設定的 secret 注入到執行環境中
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      # 步驟 4: 如果檔案有變動，就自動 commit 並 push 回儲存庫
      - name: Commit and push if there are changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add performanceData.json
          # 如果沒有變動，就不執行 commit
          git diff --staged --quiet || git commit -m ' chore:
          
          Update performance data from Google Sheet'
          git push
